<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Duckside</title>
    <%- include('./layout_link.ejs') %>

</head>

<style>

</style>

<body>

    <%- include('./layout_sidebar.ejs') %>

    <%- include('./layout_header.ejs') %>

    <div class="content-wrap">
        <div class="main">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-8 p-r-0 title-margin-right">
                        <div class="page-header">
                            <div class="page-title">
                                <h1>Hello, <span>Welcome Here</span> <span style="color: red;">script tag註解掉了</span></h1>
                            </div>
                        </div>
                    </div>
                    <!-- /# column -->
                    <div class="col-lg-4 p-l-0 title-margin-left">
                        <div class="page-header">
                            <div class="page-title">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item">投資管理</li>
                                    <li class="breadcrumb-item"><a href="ma_dashboard.html">總覽</a></li>
                                    <li class="breadcrumb-item"><a href="ma_check.html">投資結算</a></li>
                                    <!-- <li class="breadcrumb-item">小工具</li> -->
                                    <!-- <li class="breadcrumb-item active">圓餅圖: 成本</li> -->
                                </ol>
                            </div>
                        </div>
                    </div>
                    <!-- /# column -->
                </div>
                <!-- /# row -->
                <section id="main-content">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="card">
                                <div class="card-title">
                                    <h4>第一步: 輸入當前庫存</h4>
                                </div>
                                <div class="card-body">
                                    <form action="" id="myChartPie">
                                        <div class="form-group">
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text">商品名稱</span>
                                                </div>
                                                <input class="text" id="stockName" placeholder="輸入名稱或代號搜尋" type="text" list="stocklist">
                                                <datalist id="stocklist"></datalist>
                                            </div>
                                        </div>
                                        <div class="form-group form-inline">
                                            <div class="input-group mr-sm-2 mb-2 input-group-sm">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text">數量</span>
                                                </div>
                                                <input type="number" id="stockAmount" class="input-sm" placeholder="輸入股數" step=1000 required>
                                            </div>
                                            <div class="input-group mr-sm-2 mb-2 input-group-sm">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text">均價</span>
                                                </div>
                                                <input type="number" id="stockAC" class="input-sm" placeholder="輸入平均成本">
                                            </div>
                                            <div class="input-group mr-sm-2 mb-2 input-group-sm">
                                                <button onclick="addAsset()" class="btn btn-secondary btn-sm" type="button" id="btnAdd">加入</button>
                                            </div>
                                        </div>
                                    </form>
                                    <div>
                                        <table class="table table-sm p-0">
                                            <thead>
                                                <tr>
                                                    <th>刪除</th>
                                                    <th>名稱</th>
                                                    <th>數量</th>
                                                    <th>均價</th>
                                                    <th>成本</th>
                                                </tr>
                                            </thead>
                                            <tbody id="myAssetList">
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <!-- <div class="card">
                                <div class="card-title">
                                    <h4>第二步: 輸入可用資金</h4>
                                </div>
                                <div class="card-body">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <input class="mr-sm-2" type="number" id="myCash">
                                            <button class="btn btn-warning" onclick="myPieCost()" type="button" id="btnPie">送出</button>
                                        </div>
                                    </div>
                                </div>
                            </div> -->
                        </div>
                        <!-- <div class="col-lg-6">
                            <div class="card">
                                <div class="card-title">
                                    <h4>chartist</h4>
                                </div>
                                <div class="card-body">
                                    <div class="ct-chart-pie"></div>
                                </div>
                            </div>
                        </div> -->
                    </div>

                    <div class="row">
                        <div class="col-lg-12">
                            <div class="footer">
                                <p>2021 © Duckside. - <a href="#">duckside.com</a></p>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>

    <script src="js/jquery.nanoscroller.min.js"></script>
    <!-- nanoscroller -->

    <script src="js/sidebar.js"></script>
    <script src="js/pace.min.js"></script>
    <!-- sidebar -->

    <script src="js/bootstrap.min.js"></script>

    <!-- 硬載入一份寫好的上市股票收盤資料存在datalist物件 -->
    <script type="text/javascript" src="data/MI_INDEX.json"></script>


    <script src="js/scripts.js"></script>
    <script src="js/chartist/chartist.js"></script>


    <!-- 假的總覽 -->
    <!-- <script src="js/dashboard.js"></script> -->


    <!-- <script>
        // add option tags in .datalist, for user to input stockName easily.
        for (var i in stockdata) {
            var stockId = stockdata[i][0];
            var stockName = stockdata[i][1];
            // console.log(stockID);
            // console.log(stockName);
            document.getElementById("stocklist").innerHTML += `<option value="${stockName}">${stockId}<option>`;
        }


        var myAsset = [];

        function getName(myArr) {
            return $.map(myArr, function(item, index) {
                return item.name;
            })
        }

        function addAsset() {
            var n = document.getElementById("stockName").value;
            var q = parseInt(document.getElementById("stockAmount").value);
            var p = parseFloat(document.getElementById("stockAC").value).toFixed(2);
            var myStockName = getName(myAsset);
            // add input value into myStockName and myAsset
            console.log
            if (myStockName.indexOf(n) != -1) {
                alert(`已有${n}庫存資料, 將覆寫原數量均價!`)
                myAsset[myStockName.indexOf(n)] = {
                    "name": n,
                    "amount": q,
                    "AC": p,
                    "cost": p * q,
                }
            } else {
                myAsset.push({
                    "name": n,
                    "amount": q,
                    "AC": p,
                    "cost": Math.round(p * q),
                });
            }
            console.log(myAsset);

            // print myAsset in the table below the input div
            var temp = "";
            for (var i in myAsset) {
                temp +=
                    `<tr>
                        <td><button onclick="delAsset(this)" class="btn" type="button"><i class="fa fa-trash-o"></button></i></td>
                        <td>${myAsset[i].name}</td>
                        <td>${myAsset[i].amount.toLocaleString("zh-TW")}</td>
                        <td>${myAsset[i].AC.toLocaleString("zh-TW")}</td>
                        <td>${myAsset[i].cost.toLocaleString("zh-TW")}</td>
                    </tr>`;
            };
            document.getElementById("myAssetList").innerHTML = temp;

            // reset the inputs and focus back to the first input
            document.getElementById("stockName").value = "";
            document.getElementById("stockAmount").value = null;
            document.getElementById("stockAC").value = null;
            document.getElementById("stockName").focus();
        }

        // Execute above function when the user releases a key on the keyboard
        document.getElementById("stockAC").addEventListener("keyup", function(event) {
            if (event.keyCode === 13) {
                document.getElementById("btnAdd").click();
            }
        });

        function delAsset(temp) {
            var myStockName = getName(myAsset);
            var n = temp.parentNode.nextSibling.nextSibling.innerText;
            temp.parentNode.parentNode.remove();
            myAsset.splice(myStockName.indexOf(n), 1);
            console.log(myAsset)
        }

        function myPieCost() {
            // prepare the parameter of the chartist
            // get a deep copy of myAsset to data
            var data = {
                series: JSON.parse(JSON.stringify(myAsset)),
            };
            var k = parseInt(document.getElementById("myCash").value);
            var totCost = k;
            for (var i in data.series) {
                totCost += data.series[i].cost
                data.series[i]["value"] = data.series[i]["cost"];
            };
            // merge too little parts into asset "others" at second last
            var otherCost = 0;
            var otherObj = []; // for this page, not necessary
            for (var i in data.series) {
                if (data.series[i].cost / totCost < 0.04) {
                    otherCost += data.series[i].cost;
                    otherObj += data.series[i];
                    delete data.series[i];
                }
            }
            if (otherCost > 0) {
                data.series.push({
                    "name": "其他",
                    "cost": otherCost,
                    "value": otherCost,
                });
                // remove the empty hole in the array
                data.series = data.series.filter(i => i);
            }
            console.log(otherObj);
            // re-sort data series by the cost of each
            data["series"] = data["series"].sort(function(a, b) {
                return a.value < b.value ? 1 : -1;
            });


            // add the asset "cash" into the data (at last)
            data.series.push({
                "name": "現金",
                "cost": k,
                "value": k,
            });

            // calculate the proportion of each asset
            // then set the className to fill different colors by weight levels
            for (var i in data.series) {
                var pr = Math.round(data.series[i].cost / totCost * 100);
                switch ((data.series[i].name != "現金") * (pr - pr % 5) / 5) {
                    // cash gets color-lighter always
                    case 0:
                        data.series[i]["className"] = "ct-color-lighter";
                        break;
                    case 1:
                        data.series[i]["className"] = "ct-color-lighter";
                        break;
                    case 2:
                        data.series[i]["className"] = "ct-color-light";
                        break;
                    case 3:
                        data.series[i]["className"] = "ct-color-middle";
                        break;
                    case 4:
                        data.series[i]["className"] = "ct-color-heavy";
                        break;
                    default:
                        data.series[i]["className"] = "ct-color-heavier"
                };
            };
            console.log(data.series);

            // get the label names array
            var sum = function(a, b) {
                return a + b
            };
            var options = {
                labelInterpolationFnc: function(value, idx) {
                    return `${data.series[idx].name} ${Math.round(value / totCost * 1000)/10}%`;
                }
            };

            var responsiveOptions = [
                ['screen and (min-width: 640px)', {
                    chartPadding: 25,
                    labelOffset: 90,
                    labelInterpolationFnc: function(value, idx) {
                        return `${data.series[idx].name} ${Math.round(value / totCost * 1000)/10}%`;
                    },
                }],
                ['screen and (min-width: 992px)', {
                    labelInterpolationFnc: function(value, idx) {
                        return `${data.series[idx].name} ${Math.round(value / totCost * 1000)/10}%`;
                    },
                    chartPadding: 0,
                    labelOffset: 0,
                }],
                ['screen and (min-width: 1281px)', {
                    chartPadding: 25,
                    labelOffset: 90,
                    labelInterpolationFnc: function(value, idx) {
                        return `${data.series[idx].name} ${Math.round(value / totCost * 1000)/10}%`;
                    },
                }]
            ];
            new Chartist.Pie('.ct-chart-pie', data, options, responsiveOptions);
            console.log(data);
        }
        // Execute above function when the user releases a key on the keyboard
        document.getElementById("myCash").addEventListener("keyup", function(event) {
            if (event.keyCode === 13) {
                document.getElementById("btnPie").click();
            }
        });


        // ? : reset the asset "cash" and others, for user to revise the inputs and draw the pie again, not necessarily to refresh the page.
    </script> -->

</body>

</html>